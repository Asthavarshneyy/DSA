/*Problem Statement:
Given an array A, of N elements. Sort the array using quicksort algorithm.(Note : Use randomized quicksort, otherwise worst case will not pass).

Input Format
A single integer, N, denoting the number of elements in array. Next line contains N integers, denoting the elements of array.

Constraints
1<=N<=2*10^5
|Ai|<=10^9

Output Format
Print in a single line, N spaced integers, denoting the elements of array A in sorted order.

Sample Input
5
3 6 4 1 2
Sample Output
1 2 3 4 6 */


Solution:
#include<iostream>
#include <algorithm>

using namespace std;

int partition(int *a, int s, int e)
{
	int i=s-1;
	for(int j=s; j<e;j++)
	{
		if(a[j]<a[e])
		{
			i++;
			swap(a[i],a[j]);
		}
	}
	swap(a[i+1],a[e]);
	return i+1;
}

void quicksort(int *a, int s, int e)
{
	//base case
	if(s>=e)
	 return;

	//recusrive function
	int indx=partition(a, s, e);
	quicksort(a, s, indx-1);
	quicksort(a, indx+1, e);
}

int main() {
	int N;
	cin>>N;
	int a[N];
	for(int i=0;i<N;i++)
	 cin>>a[i];
	quicksort(a, 0, N-1);
	for(int i=0;i<N;i++)
	 cout<<a[i]<<" ";
	return 0;
}
